@page "/customers/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3>Create New Customer</h3>
<hr />
<br />

<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="form-group">
		<label>Name: </label>
		<div>
			<InputText @bind-Value="customer.CustName" class="form-control" />
			<ValidationMessage For="@(()=> customer.CustName)" />
		</div>
	</div>
	<div class="form-group">
		<label>Address: </label>
		<div>
			<InputText @bind-Value="customer.CustAddress" class="form-control" />
			<ValidationMessage For="@(()=> customer.CustAddress)" />
		</div>
	</div>
	<div class="form-group">
		<label>Email: </label>
		<div>
			<InputText @bind-Value="customer.CustEmail" class="form-control" />
			<ValidationMessage For="@(()=> customer.CustEmail)" />
		</div>
	</div>
	<div class="form-group">
		<label>Phone Number: </label>
		<div>
			<InputText @bind-Value="customer.CustPhoneNo" class="form-control" />
			<ValidationMessage For="@(()=> customer.CustPhoneNo)" />
		</div>
	</div>
	<div class="form-group">
		<label>Target Calories: </label>
		<div>
			<InputNumber @bind-Value="customer.TargetCalories" class="form-control" />
			<ValidationMessage For="@(()=> customer.TargetCalories)" />
		</div>
	</div>
	<div class="form-group">
		<label>Target Protein: </label>
		<div>
			<InputNumber @bind-Value="customer.TargetProtein" class="form-control" />
			<ValidationMessage For="@(()=> customer.TargetProtein)" />
		</div>
	</div>
	<div class="form-group">
		<label>Target Fats: </label>
		<div>
			<InputNumber @bind-Value="customer.TargetFats" class="form-control" />
			<ValidationMessage For="@(()=> customer.TargetFats)" />
		</div>
	</div>
	<button type="submit" class="btn btn-success btn-block">
		Create Customer
	</button>
</EditForm>

@code {
	Customer customer = new Customer();
	private async Task CreateCustomer()
	{
		await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
		_navManager.NavigateTo("/customers/");
	}

}