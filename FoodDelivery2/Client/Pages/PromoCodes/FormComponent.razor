@inject HttpClient _client
@using FoodDelivery2.Client.Components

<EditForm Model="@promocode" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">

		<div class="form-group">
			<label>PromoCode: </label>
			<div>
				<InputText @bind-Value="promocode.PromoName" class="form-control" />
				<ValidationMessage For="@(()=> promocode.PromoName)" />
			</div>
		</div>
		<div class="form-group">
			<label>Amount: </label>
			<div>
				<InputNumber @bind-Value="promocode.Amount" class="form-control" />
				<ValidationMessage For="@(()=> promocode.Amount)" />
			</div>
		</div>
		<div class="form-group">
			<label>Expiry Date: </label>
			<div>
				<InputDate @bind-Value="@promocode.PCExpiryDate" class="form-control" />
				<ValidationMessage For="@(()=> promocode.PCExpiryDate)" />
			</div>
		</div>
		

    </fieldset>


    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>

    }
	<BackToList Target="promocodes" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public PromoCode? promocode { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Customer>? Customers;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

}